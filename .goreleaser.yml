builds:
  - env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w -X github.com/git-town/git-town/cmd.Version={{.Tag}} -X
        github.com/git-town/git-town/cmd.BuildDate={{.Date}}
    goarch:
      - amd64
      - 386
      - arm
      - arm64
    goarm:
      - 5
      - 6
      - 7
    goos:
      - darwin
      - freebsd
      - linux
      - netbsd
      - openbsd
      - windows
archives:
  - builds:
    replacements:
      darwin: macOS
      386: 32-bit
      amd64: 64-bit
    format_overrides:
      - goos: windows
        format: zip
checksum:
  name_template: "checksums.txt"
nfpms:
  - id: git-town
    package_name: git-town

    # You can change the file name of the package.
    # Default: `{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}`
    # file_name_template:
    #   "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

    # Build IDs for the builds you want to create NFPM packages for.
    # Defaults to all builds.
    # builds:
    #   - foo
    #   - bar

    # Replacements for GOOS and GOARCH in the package name.
    # Keys should be valid GOOSs or GOARCHs.
    # Values are the respective replacements.
    # Default is empty.
    replacements:
      amd64: 64-bit
      386: 32-bit
      darwin: macOS

    vendor: the Git Town authors
    homepage: https://www.git-town.com
    description: High-level command-line interface for Git
    license: MIT
    formats:
      - deb
      - rpm
    dependencies:
      - git
    # Package release.
    release: 7.3.0

    # Files to add to your package (beyond the binary).
    # Keys are source paths/globs to get the files from.
    # Values are the destination locations of the files in the package.
    # Use globs to add all contents of a folder.
    # files:
    #   "scripts/etc/init.d/**": "/etc/init.d"
    #   "path/**/glob": "/var/foo/glob"

    # Scripts to execute during the installation of the package.
    # Keys are the possible targets during the installation process
    # Values are the paths to the scripts which will be executed
    # scripts:
    #   preinstall: "scripts/preinstall.sh"
    #   postinstall: "scripts/postinstall.sh"
    #   preremove: "scripts/preremove.sh"
    #   postremove: "scripts/postremove.sh"

release:
  github:
    owner: git-town
    name: git-town

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  # prerelease: auto
  prerelease: true

  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  name_template: "v{{.Tag}}"

  # You can disable this pipe in order to not upload any artifacts to
  # GitHub.
  # Defaults to false.
  # disable: true
  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
  # extra_files:
  #   - glob: ./path/to/file.txt
  #   - glob: ./glob/**/to/**/file/**/*
  #   - glob: ./glob/foo/to/bar/file/foobar/override_from_previous

snapshot:
  name_template: "{{ .Tag }}"
